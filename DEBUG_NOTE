1. The control depenencies generated by SwapAdvisor is not a superset of the original
   control dependencies. SwapAdvisor does eliminate a control dependency if the
   dependent node is also the input node.
2. The first control dependency of a backward op mush be its forward op.
3. Context and Device do not preserved if SA_LoadGraph
4. The length of Context and Device should be changed after SA_LoadGraph.
5. Let SwapEntry depend on data is an easier way to solve the data entry allocation issue.
6. No need to modify "num_forward_inputs" due to using Note 5).
7. However, it is mandatory to modify "num_forward_outputs". See "num_forward_outputs" usage
   in SA_LoadGraph().


TODO:
1. It is not clear that why Device is not modified in SplitDistributedGraph. And also, how are we going to deal with the case when there are multiple GPUs?
